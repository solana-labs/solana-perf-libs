/*
 * This file contains Solana's SGX enclave interface.
 */

enclave {
    from "sgx_tkey_exchange.edl" import *;
    include "sgx_key_exchange.h"
    include "sgx_trts.h"
    include "signing_internal.h"

   trusted {
      public sgx_status_t init_remote_attestation(
         int b_pse,
         [in] sgx_ec256_public_t* sp_pub_key,
         [out] sgx_ra_context_t *pctxt);

      public sgx_status_t close_remote_attestation(sgx_ra_context_t ctxt);

      public sgx_status_t init_sgx_ed25519(
         uint32_t lockout_period,
         uint32_t lockout_multiplier,
         uint32_t lockout_max_depth,
         uint32_t key_len,
         [out, size=key_len] uint8_t* pubkey);

      public sgx_status_t get_sgx_ed25519_data(
         uint32_t data_size,
         [out, size=data_size] uint8_t* sealed_data,
         [out] uint32_t* data_size_needed);

      public sgx_status_t init_sgx_ed25519_from_data(
         uint32_t data_size,
         [in, size=data_size] uint8_t* sealed_data,
         uint32_t lockout_period,
         uint32_t lockout_multiplier,
         uint32_t lockout_max_depth,
         uint32_t key_len,
         [out, size=key_len] uint8_t* pubkey);

      public sgx_status_t sign_sgx_ed25519(
         uint32_t msg_len,
         [in, size=msg_len] const uint8_t* msg,
         uint32_t history_len,
         [in, count=history_len] const history_entry_t* entries,
         uint32_t sig_len,
         [out, size=sig_len] uint8_t* signature);
   };
};
